<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.sc.mapper.BookMapper">
    
    <sql id="query_book_where">
        <if test="author != null">
            and author=#{author}
        </if>

        <if test="type_id != null">
            and type_id=#{type_id}
        </if>

        <if test="name != null">
            and name=#{name}
        </if>

        <if test="ISBN != null">
            and ISBN=#{ISBN}
        </if>
    </sql>

    <select id="list" resultType="Book">
        select * from book order by id desc
    </select>

    <select id="getById" resultType="Book">
        select * from book where id=#{id}
    </select>

    <update id="update" parameterType="Book">
        update book
        set ISBN = #{ISBN,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            press = #{press,jdbcType=VARCHAR},
            publish_date = #{publish_date,jdbcType=TIMESTAMP},
            price = #{price,jdbcType=FLOAT},
            stock = #{stock,jdbcType=INTEGER},
            type_id = #{type_id,jdbcType=INTEGER}
        where id=#{id,jdbcType=INTEGER}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="Book">
        insert into book
        (ISBN, name, author, press, publish_date, price, stock, type_id)
        values
        (#{ISBN,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{author,jdbcType=VARCHAR},
        #{press,jdbcType=VARCHAR},#{publish_date,jdbcType=TIMESTAMP},#{price,jdbcType=FLOAT},
        #{stock,jdbcType=INTEGER},#{type_id,jdbcType=INTEGER})
    </insert>

    <delete id="deleteById">
        delete from book where id=#{id}
    </delete>

    <select id="getByMore" parameterType="Book" resultType="Book">
        select * from book
        <where>
            <include refid="query_book_where"></include>
        </where>
    </select>

    <select id="getAllAuthor" resultType="String">
        select distinct author from book
    </select>
</mapper>